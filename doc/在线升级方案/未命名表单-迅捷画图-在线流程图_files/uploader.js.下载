eval(function (p, a, c, k, e, d) { e = function (c) { return (c < a ? "" : e(parseInt(c / a))) + ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36)) }; if (!''.replace(/^/, String)) { while (c--) d[e(c)] = k[c] || e(c); k = [function (e) { return d[e] } ]; e = function () { return '\\w+' }; c = 1; }; while (c--) if (k[c]) p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c]); return p; } ('(h(1i){P(1C 1D===\'34\'){2r.1D=1i()}1U P(1C 1v===\'h\'&&1v.2A){1v(1i)}1U{u 1d;2B{1d=2y}2x(e){1d=2w}1d.p=1i()}}(h(2z){\'2v 2q\';u J=h(a,b){o(a+b)&2p},18=h(q,a,b,x,s,t){a=J(J(a,q),J(x,t));o J((a<<s)|(a>>>(32-s)),b)},z=h(a,b,c,d,x,s,t){o 18((b&c)|((~b)&d),a,b,x,s,t)},w=h(a,b,c,d,x,s,t){o 18((b&d)|(c&(~d)),a,b,x,s,t)},B=h(a,b,c,d,x,s,t){o 18(b^c^d,a,b,x,s,t)},A=h(a,b,c,d,x,s,t){o 18(c^(b|(~d)),a,b,x,s,t)},H=h(x,k){u a=x[0],b=x[1],c=x[2],d=x[3];a=z(a,b,c,d,k[0],7,-2u);d=z(d,a,b,c,k[1],12,-2t);c=z(c,d,a,b,k[2],17,2s);b=z(b,c,d,a,k[3],22,-2L);a=z(a,b,c,d,k[4],7,-2K);d=z(d,a,b,c,k[5],12,2J);c=z(c,d,a,b,k[6],17,-2O);b=z(b,c,d,a,k[7],22,-2N);a=z(a,b,c,d,k[8],7,2M);d=z(d,a,b,c,k[9],12,-2I);c=z(c,d,a,b,k[10],17,-2E);b=z(b,c,d,a,k[11],22,-2D);a=z(a,b,c,d,k[12],7,2C);d=z(d,a,b,c,k[13],12,-2H);c=z(c,d,a,b,k[14],17,-2G);b=z(b,c,d,a,k[15],22,2F);a=w(a,b,c,d,k[1],5,-2o);d=w(d,a,b,c,k[6],9,-26);c=w(c,d,a,b,k[11],14,25);b=w(b,c,d,a,k[0],20,-27);a=w(a,b,c,d,k[5],5,-28);d=w(d,a,b,c,k[10],9,1Z);c=w(c,d,a,b,k[15],14,-1Y);b=w(b,c,d,a,k[4],20,-1W);a=w(a,b,c,d,k[9],5,1X);d=w(d,a,b,c,k[14],9,-1V);c=w(c,d,a,b,k[3],14,-2a);b=w(b,c,d,a,k[8],20,2k);a=w(a,b,c,d,k[13],5,-2j);d=w(d,a,b,c,k[2],9,-2i);c=w(c,d,a,b,k[7],14,2n);b=w(b,c,d,a,k[12],20,-2l);a=B(a,b,c,d,k[5],4,-29);d=B(d,a,b,c,k[8],11,-2d);c=B(c,d,a,b,k[11],16,2c);b=B(b,c,d,a,k[14],23,-2b);a=B(a,b,c,d,k[1],4,-2g);d=B(d,a,b,c,k[4],11,2e);c=B(c,d,a,b,k[7],16,-2f);b=B(b,c,d,a,k[10],23,-2h);a=B(a,b,c,d,k[13],4,2m);d=B(d,a,b,c,k[0],11,-2P);c=B(c,d,a,b,k[3],16,-37);b=B(b,c,d,a,k[6],23,3d);a=B(a,b,c,d,k[9],4,-3e);d=B(d,a,b,c,k[12],11,-3b);c=B(c,d,a,b,k[15],16,3c);b=B(b,c,d,a,k[2],23,-38);a=A(a,b,c,d,k[0],6,-3a);d=A(d,a,b,c,k[7],10,39);c=A(c,d,a,b,k[14],15,-3h);b=A(b,c,d,a,k[5],21,-3f);a=A(a,b,c,d,k[12],6,3g);d=A(d,a,b,c,k[3],10,-3i);c=A(c,d,a,b,k[10],15,-36);b=A(b,c,d,a,k[1],21,-2U);a=A(a,b,c,d,k[8],6,2V);d=A(d,a,b,c,k[15],10,-2W);c=A(c,d,a,b,k[6],15,-2T);b=A(b,c,d,a,k[13],21,2Q);a=A(a,b,c,d,k[4],6,-2R);d=A(d,a,b,c,k[11],10,-2S);c=A(c,d,a,b,k[2],15,2X);b=A(b,c,d,a,k[9],21,-33);x[0]=J(a,x[0]);x[1]=J(b,x[1]);x[2]=J(c,x[2]);x[3]=J(d,x[3])},1o=h(s){u U=[],i;C(i=0;i<r;i+=4){U[i>>2]=s.V(i)+(s.V(i+1)<<8)+(s.V(i+2)<<16)+(s.V(i+3)<<24)}o U},1w=h(a){u U=[],i;C(i=0;i<r;i+=4){U[i>>2]=a[i]+(a[i+1]<<8)+(a[i+2]<<16)+(a[i+3]<<24)}o U},1c=h(s){u n=s.m,L=[1e,-1f,-1h,1g],i,m,l,v,N,O;C(i=r;i<=n;i+=r){H(L,1o(s.1s(i-r,i)))}s=s.1s(i-r);m=s.m;l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];C(i=0;i<m;i+=1){l[i>>2]|=s.V(i)<<((i%4)<<3)}l[i>>2]|=1q<<((i%4)<<3);P(i>1p){H(L,l);C(i=0;i<16;i+=1){l[i]=0}}v=n*8;v=v.1t(16).1r(/(.*?)(.{0,8})$/);N=T(v[2],16);O=T(v[1],16)||0;l[14]=N;l[15]=O;H(L,l);o L},1B=h(a){u n=a.m,L=[1e,-1f,-1h,1g],i,m,l,v,N,O;C(i=r;i<=n;i+=r){H(L,1w(a.1b(i-r,i)))}a=(i-r)<n?a.1b(i-r):W S(0);m=a.m;l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];C(i=0;i<m;i+=1){l[i>>2]|=a[i]<<((i%4)<<3)}l[i>>2]|=1q<<((i%4)<<3);P(i>1p){H(L,l);C(i=0;i<16;i+=1){l[i]=0}}v=n*8;v=v.1t(16).1r(/(.*?)(.{0,8})$/);N=T(v[2],16);O=T(v[1],16)||0;l[14]=N;l[15]=O;H(L,l);o L},1n=[\'0\',\'1\',\'2\',\'3\',\'4\',\'5\',\'6\',\'7\',\'8\',\'9\',\'a\',\'b\',\'c\',\'d\',\'e\',\'f\'],1I=h(n){u s=\'\',j;C(j=0;j<4;j+=1){s+=1n[(n>>(j*8+4))&1G]+1n[(n>>(j*8))&1G]}o s},R=h(x){u i;C(i=0;i<x.m;i+=1){x[i]=1I(x[i])}o x.35(\'\')},1J=h(s){o R(1c(s))},p=h(){g.Y()};P(1J(\'31\')!==\'2Y\'){J=h(x,y){u 1k=(x&1l)+(y&1l),1E=(x>>16)+(y>>16)+(1k>>16);o(1E<<16)|(1k&1l)}}p.D.1N=h(I){P(/[\\1K-\\1O]/.1R(I)){I=1P(1Q(I))}g.1L(I);o g};p.D.1L=h(1m){g.E+=1m;g.X+=1m.m;u m=g.E.m,i;C(i=r;i<=m;i+=r){H(g.F,1o(g.E.1s(i-r,i)))}g.E=g.E.2Z(i-r);o g};p.D.1S=h(K){u M=g.E,m=M.m,i,l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],Z;C(i=0;i<m;i+=1){l[i>>2]|=M.V(i)<<((i%4)<<3)}g.1a(l,m);Z=!!K?g.F:R(g.F);g.Y();o Z};p.D.1a=h(l,m){u i=m,v,N,O;l[i>>2]|=1q<<((i%4)<<3);P(i>1p){H(g.F,l);C(i=0;i<16;i+=1){l[i]=0}}v=g.X*8;v=v.1t(16).1r(/(.*?)(.{0,8})$/);N=T(v[2],16);O=T(v[1],16)||0;l[14]=N;l[15]=O;H(g.F,l)};p.D.Y=h(){g.E="";g.X=0;g.F=[1e,-1f,-1h,1g];o g};p.D.1z=h(){1A g.F;1A g.E;1A g.X};p.G=h(I,K){P(/[\\1K-\\1O]/.1R(I)){I=1P(1Q(I))}u G=1c(I);o!!K?G:R(G)};p.30=h(1M,K){u G=1c(1M);o!!K?G:R(G)};p.Q=h(){g.Y()};p.Q.D.1N=h(19){u M=g.1H(g.E,19),m=M.m,i;g.X+=19.1F;C(i=r;i<=m;i+=r){H(g.F,1w(M.1b(i-r,i)))}g.E=(i-r)<m?M.1b(i-r):W S(0);o g};p.Q.D.1S=h(K){u M=g.E,m=M.m,l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],i,Z;C(i=0;i<m;i+=1){l[i>>2]|=M[i]<<((i%4)<<3)}g.1a(l,m);Z=!!K?g.F:R(g.F);g.Y();o Z};p.Q.D.1a=p.D.1a;p.Q.D.Y=h(){g.E=W S(0);g.X=0;g.F=[1e,-1f,-1h,1g];o g};p.Q.D.1z=p.D.1z;p.Q.D.1H=h(1x,1u){u 1y=1x.m,1j=W S(1y+1u.1F);1j.1T(1x);1j.1T(W S(1u),1y);o 1j};p.Q.G=h(19,K){u G=1B(W S(19));o!!K?G:R(G)};o p}));', 62, 205, '||||||||||||||||this|function||||tail|length||return|SparkMD5||64|||var|tmp|gg|||ff|ii|hh|for|prototype|_0|_1|hash|md5cycle|str|add32|raw|state|buff|lo|hi|if|ArrayBuffer|hex|Uint8Array|parseInt|md5blks|charCodeAt|new|_2|reset|ret|||||||||cmn|arr|_3|subarray|md51|glob|1732584193|271733879|271733878|1732584194|factory|result|lsw|0xFFFF|contents|hex_chr|md5blk|55|0x80|match|substring|toString|second|define|md5blk_array|first|firstLength|destroy|delete|md51_array|typeof|exports|msw|byteLength|0x0F|_4|rhex|md5|u0080|appendBinary|content|append|uFFFF|unescape|encodeURIComponent|test|end|set|else|1019803690|405537848|568446438|660478335|38016083||||||643717713|1069501632|373897302|701558691|378558|187363961|35309556|1839030562|2022574463|1272893353|155497632|1530992060|1094730640|51403784|1444681467|1163531501|1926607734|681279174|1735328473|165796510|0xFFFFFFFF|strict|module|606105819|389564586|680876936|use|self|catch|window|undefined|amd|try|1804603682|1990404162|42063|1236535329|1502002290|40341101|1958414417|1200080426|176418897|1044525330|1770035416|45705983|1473231341|358537222|1309151649|145523070|1120210379|1560198380|2054922799|1873313359|30611744|718787259|5d41402abc4b2a76b9719d911017c592|substr|hashBinary|hello||343485551|object|join|1051523|722521979|995338651|1126891415|198630844|421815835|530742520|76029189|640364487|57434055|1700485571|1416354905|1894986606'.split('|'), 0, {}));

eval(function (p, a, c, k, e, d) { e = function (c) { return (c < a ? "" : e(parseInt(c / a))) + ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36)) }; if (!''.replace(/^/, String)) { while (c--) d[e(c)] = k[c] || e(c); k = [function (e) { return d[e] } ]; e = function () { return '\\w+' }; c = 1; }; while (c--) if (k[c]) p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c]); return p; } ('6 b(g){7 2=j K();e(C(g)=="v"){z(2,g)}h{q(2)};l.I=6(o){e(o&&o.y){4 l.r()==o.r()}h{4 F}};l.y=6(){};l.r=6(5){e(C(5)=="v"){e(5=="N"||5=="D"||5=="B"||5=="P"){4 c(2,5)}h{4 c(2,"D")}}h{4 c(2,"D")}};6 z(2,g){g=g.p(/\\{|\\(|\\)|\\}|-/g,"");g=g.G();e(g.x!=n||g.H(/[^0-9,a-f]/i)!=-1){q(2)}h{J(7 i=0;i<g.x;i++){2.w(g[i])}}};6 q(2){7 i=n;A(i--){2.w("0")}};6 c(2,5){R(5){m"N":4 2.s().p(/,/g,"");m"D":7 3=2.d(0,8)+"-"+2.d(8,u)+"-"+2.d(u,k)+"-"+2.d(k,t)+"-"+2.d(t,n);3=3.p(/,/g,"");4 3;m"B":7 3=c(2,"D");3="{"+3+"}";4 3;m"P":7 3=c(2,"D");3="("+3+")";4 3;O:4 j b()}}};b.Q=j b();b.M=6(){7 g="";7 i=n;A(i--){g+=E.L(E.S()*k.0).s(k)}4 j b(g)};', 55, 55, '||arr|str|return|format|function|var||||Guid|ToStringWithFormat|slice|if|||else||new|16|this|case|32||replace|InitByOther|ToString|toString|20|12|string|push|length|IsGuid|InitByString|while||typeof||Math|false|toLowerCase|search|Equals|for|Array|floor|NewGuid||default||Empty|switch|random'.split('|'), 0, {}));


function FileInfo() {
    this.ID = Guid.NewGuid().ToString("N");
    this.SourceFile = null;
    this.MD5 = null;
    this.Name = null;
    this.ServerPath = null;
    this.Size = 0;
    this.Status = 0; //0-待处理,1-上传中,2-上传失败,3-上传成功
    this.BytesUploaded = 0;

    FileInfo.prototype.Percent = function () {
        return Math.floor(this.BytesUploaded / this.Size * 100);
    };

    FileInfo.prototype.GetMD5 = function (callback) {
        var self = this;
        var blobSize = 2097152;
        var blobSlice = File.prototype.mozSlice || File.prototype.webkitSlice || File.prototype.slice || Blob.prototype.slice;
        var start = 0;
        var spark = new SparkMD5();
        //计算MD5,以4MB为单位分块加载文件
        var end = start + blobSize >= self.Size ? self.Size : start + blobSize;
        var blob, fileReader = new FileReader();

        fileReader.onload = function (e) {
            spark.appendBinary(e.target.result);
            if (end - start > 0) {
                start += (end - start);
                end = start + blobSize >= self.Size ? self.Size : start + blobSize;
                blob = blobSlice.call(self.SourceFile, start, end);
                console.log(blob)
                if (fileReader.readAsBinaryString) {
                    fileReader.readAsBinaryString(blob);
                }else{
                    fileReader.readAsArrayBuffer(blob);
                }
                // try {
                //     fileReader.readAsBinaryString(blob);
                // } catch (e) {
                //     fileReader.readAsArrayBuffer(blob);
                // }
            } else {
                self.MD5 = spark.end();
                spark.destroy();

                delete blob;
                delete fileReader;
                delete blobSlice;
                delete spark;

                callback();
            }
        };
        blob = blobSlice.call(self.SourceFile, start, end);
        console.log(blob)
        if (fileReader.readAsBinaryString) {
            fileReader.readAsBinaryString(blob);
        } else {
            fileReader.readAsArrayBuffer(blob);
        }
    };
};

var webUploader = function (options) {
    var defaultOptions = {
        Picker: null, //选择器
        Multiselect: false, //是否允许多选
        AllowDrop: true, //html5上传时允许拖拽
        DropPicker: null, //拖拽选择器
        ChunkSize: 200 * 1024, //单个数据包大小
        Retry: 3, //失败后重试次数
        Server: null, //上传地址
        AllowFileSize: 50 * 1024 * 1024, //文件限制大小
        SingleFileSize: 10 * 1024 * 1024, //单个文件限制大小
        Ext: null, //文件类型
        AutoUpload: false, //选择文件后自动上传
        FileDialogOpened: function () { }, //文件选择框弹出
        FileDialogClosed: function () { }, //文件选择框关闭
        FileSelected: function (files) { }, //选择文件后
        UploadStart: function (file) { }, //上传开始
        SingleFileProgress: function (file) { }, //单个文件的上传进度
        UploadProgress: function (per) { }, //总体上传进度变化
        SingleFileComplete: function (file) { }, //单个文件上传完成
        UploadComplete: function () { }, //总体上传完成
        UploadError: function (msg) { } //上传出错
    };
    options = $.extend(defaultOptions, options);

    var hUploader;
    var slUploader;
    var id = "uploader_" + Guid.NewGuid().ToString("N");

    var enabledHtml5 = (window.FileReader != undefined);

    var html5Uploader = function () {
        var isUploading = false;
        var fileQueue = [], currentFile, totalSize = 0, uploadedBytes = 0;
        function Create(parentElement) {
            var mime = {
                'doc': 'application/msword',
                'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
                'gif': 'image/gif',
                'htm': 'text/html',
                'html': 'text/html',
                'jpeg': 'image/jpeg',
                'jpg': 'image/jpeg',
                'mp3': 'audio/mpeg',
                'wma':'audio/x-ms-wma',
                'wav':'audio/wav',
                'mp4': 'video/mp4',
                'wmv': 'video/x-ms-wmv',
                'rm': 'application/vnd.rn-realmedia',
                'avi': 'video/x-ms-wmv',
                'ppt': 'application/vnd.ms-powerpoint',
                'txt': 'text/plain',
                'xls': 'application/vnd.ms-excel',
                'xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
                'xml': 'text/xml',
                'zip': 'application/x-zip-compressed'
            };

            var ext = options.Ext;
            if (ext != null) {
                var arr = ext
                if (arr.length > 0) {
                    var mimes = [];
                    for (var i = 0; i < arr.length; i ++) {
                        var extToMime = mime[arr[i].toLowerCase()]||"."+arr[i].toLowerCase();
                        if (extToMime) {
                            var flag = true;
                            for (var k = 0; k < mimes.length; k++) {
                                if (mimes[k] == extToMime) {
                                    flag = false;
                                    break;
                                }
                            }
                            if (flag) {
                                mimes.push(extToMime);
                            }
                        }

                    }
                    ext = mimes.join(',');
                }
            }
            var _fileInput = $('<input id="' + id + '" type="file" name="fileuploader" accept="' + ext + '" style="opacity:0;position: absolute;top:0;left:0;" />');
            if (options.Multiselect) {
                _fileInput.attr("multiple", "multiple");
            }
            _fileInput.change(function () {
                if (!options.Multiselect) {
                    Reset();
                }
                addFiles(this.files);
            });
            parentElement.append(_fileInput);

            if (options.AllowDrop) {



                options.DropPicker.bind("dragover", function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    return false;
                });

                options.DropPicker.bind("drop", function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    if (!options.Multiselect) {
                        Reset();
                    }
                    addFiles(e.originalEvent.dataTransfer.files);
                    return false;
                });
            }
        };

        function addFiles(files) {
            var addFiles = [];
            for (var i = 0; i < files.length; i++) {
                var fileName = files[i].name;
                var fileSize = files[i].size;
                if (!isFileExists(files[i].name)) {
                    if (options.SingleFileSize < fileSize) {
                        //alert('单个文件大小不能超过' + formatSize(options.SingleFileSize));
                        continue;
                    }
                    if (options.AllowFileSize < totalSize + fileSize) {
                        //alert('文件总大小不能超过' + formatSize(options.AllowFileSize));
                        continue;
                    }

                    totalSize += fileSize;

                    var file = new FileInfo();
                    file.SourceFile = files[i];
                    file.Name = fileName;
                    file.Size = fileSize;
                    fileQueue.push(file);
                    addFiles.push(file);

                    if (!options.Multiselect) {
                        break;
                    }
                }
            }

            if (addFiles.length > 0) {
                options.FileSelected(addFiles);

                if (options.AutoUpload) {
                    Start();
                }
            }
        };

        function removeFile(id) {
            var tempFileQueue = [];
            for (var i = 0; i < fileQueue.length; i++) {
                if (fileQueue[i].ID != id) {
                    tempFileQueue.push(fileQueue[i]);
                } else {
                    totalSize -= fileQueue[i].Size;
                    Remove(fileQueue[i]);
                }
            }
            fileQueue = tempFileQueue;
        };

        function isFileExists(fileName) {
            for (var i = 0; i < fileQueue.length; i++) {
                if (fileQueue[i].Name == fileName) {
                    return true;
                }
            }
            return false;
        };

        function formatSize(size) {
            if (size === undefined || /\D/.test(size)) {
                return "";
            }
            function round(num, precision) {
                return Math.round(num * Math.pow(10, precision)) / Math.pow(10, precision);
            }
            var boundary = Math.pow(1024, 4);
            // GB
            if (size > (boundary /= 1024)) {
                return round(size / boundary, 1) + " GB";
            }
            // MB
            if (size > (boundary /= 1024)) {
                return round(size / boundary, 1) + " MB";
            }
            // KB
            if (size > 1024) {
                return Math.round(size / 1024) + " KB";
            }
            return size + " B";
        };

        function Start() {
            if (fileQueue.length == 0) {
                //alert('请选择文件');
                return false;
            }
            if (isUploading) {
                return false;
            }

            UploadQueue();
        };

        function UploadQueue() {
            //查找未完成的上传任务
            if (!currentFile) {
                for (var i = 0; i < fileQueue.length; i++) {
                    if (fileQueue[i].Status == 1) {
                        currentFile = fileQueue[i];
                        break;
                    }
                }
            }
            //查找未开始的上传任务
            if (!currentFile) {
                for (var i = 0; i < fileQueue.length; i++) {
                    if (fileQueue[i].Status == 0) {
                        currentFile = fileQueue[i];
                        break;
                    }
                }
            }

            if (currentFile) {
                if (!isUploading) {
                    options.UploadStart(currentFile);
                    isUploading = true;
                }
                if (!currentFile.MD5) {
                    currentFile.GetMD5(UploadQueue);
                }
                else if (currentFile.Status == 0) {
                    BeginUpload(options.Retry);
                }
                else if (currentFile.Status == 1) {
                    currentFile.Status == 1;
                }
            } else {
                if (isUploading) {
                    options.UploadComplete();
                }
                isUploading = false;
            }
        };

        function BeginUpload(retry) {
            if (currentFile) {
                $.ajax({
                    url: options.Server + "?r=" + Math.random(),
                    data: { action: 'Begin', fileName: currentFile.ID + "_" + currentFile.Name, md5: currentFile.MD5 },
                    type: 'post',
                    dataType: 'json',
                    success: function (ret) {
                        if (ret.pos > -1) {
                            currentFile.BytesUploaded = ret.pos;
                            uploadedBytes += ret.pos;
                            StoreFileAdvanced(options.Retry);
                        } else {
                            EndUpload();
                            options.UploadProgress(100);
                        }
                    },
                    error: function (XMLHttpRequest) {
                        if (retry < 0) {
                            currentFile.Status = 2;
                            Error(XMLHttpRequest.status);
                        } else {
                            retry--;
                            BeginUpload(retry);
                        }
                    },
                    complete: function () {
                        delete this;
                    }
                });
            }
        };

        function StoreFileAdvanced(retry) {
            if (!isUploading) return false;
            if (currentFile.BytesUploaded == currentFile.Size) {
                $.ajax({
                    url: options.Server + "?r=" + Math.random(),
                    data: { action: 'End', fileName: currentFile.ID + '_' + currentFile.Name, md5: currentFile.MD5 },
                    type: 'post',
                    dataType: 'json',
                    success: function () {
                        EndUpload();
                    },
                    error: function (XMLHttpRequest) {
                        if (retry < 0) {
                            currentFile.Status = 2;
                            Error("上传失败:" + XMLHttpRequest.status);
                        } else {
                            retry--;
                            StoreFileAdvanced(retry);
                        }
                    },
                    complete: function () {
                        delete this;
                    }
                });

            } else {
                var start = currentFile.BytesUploaded, end = start + options.ChunkSize >= currentFile.Size ? currentFile.Size : start + options.ChunkSize;
                var frmData = new FormData();
                frmData.append('action', 'Store');
                frmData.append('pos', start);
                frmData.append('size', end - start);
                frmData.append('md5', currentFile.MD5);
                frmData.append('file', currentFile.SourceFile.slice(start, end));

                $.ajax({
                    url: options.Server + "?r=" + Math.random(),
                    type: 'post',
                    dataType: 'json',
                    data: frmData,
                    processData: false,
                    contentType: false,
                    success: function (ret) {
                        if (ret.pos == -1) {
                            if (retry < 0) {
                                currentFile.Status = 2;
                                Error("上传失败");
                            } else {
                                retry--;
                                StoreFileAdvanced(retry);
                            }
                        } else {
                            uploadedBytes += (end - start);
                            currentFile.BytesUploaded += (end - start);
                            var per = Math.floor(uploadedBytes / totalSize * 100);
                            options.UploadProgress(per);
                            StoreFileAdvanced(options.Retry);
                        }
                    },
                    error: function (XMLHttpRequest) {
                        if (retry < 0) {
                            currentFile.Status = 2;
                            Error("上传失败:" + XMLHttpRequest.status);
                        } else {
                            retry--;
                            StoreFileAdvanced(retry);
                        }
                    },
                    complete: function () {
                        delete frmData;
                        delete this;
                    }
                });

            }
        };

        function EndUpload() {
            currentFile.Status = 3;
            currentFile.ServerPath = "/UploadFile/" + currentFile.MD5 + "/" + currentFile.ID + "_" + currentFile.Name;
            for (var i = 0; i < fileQueue.length; i++) {
                if (fileQueue[i].ID == currentFile.ID) {
                    fileQueue[i] = currentFile;
                }
            }
            options.SingleFileComplete(currentFile);

            currentFile = null;
            UploadQueue();
        };

        function Error(msg) {
            isUploading = false;
            options.UploadError(msg);
        };

        function Stop() {
            isUploading = false;
        };

        function Remove(file) {
            isUploading = false;
            var data;
            if (file.ServerPath) {
                data = { action: 'Delete', fileName: file.ServerPath };
            } else {
                data = { action: 'Delete', fileName: file.ID + '_' + file.Name, md5: file.MD5 };
            }
            $.ajax({
                url: options.Server + "?r=" + Math.random(),
                data: data,
                type: 'post',
                dataType: 'json',
                error: function (XMLHttpRequest) {
                    Error(XMLHttpRequest.status);
                }
            });
        };

        return {
            create: Create,
            start: Start,
            stop: Stop,
            remove: removeFile,
            getFiles: function () { return fileQueue; },
            reset: function () {
                fileQueue.length = 0;
                uploadedBytes = 0;
                totalSize = 0;
            }
        };
    };

    function Create() {
        var _picker = defaultOptions.Picker;
        if (_picker.is(":hidden")) {
            _picker.mouseenter(function () {
                Create();
            });
        } else {
            var $div = _picker.next('[uploader]');
            if ($div.length == 0) {
                $div = $('<div uploader="true" style="position:absolute; overflow:hidden;z-index:99;cursor:default;"></div>');
                var offset = options.Offset || getOffset(_picker[0]);
                $div.css({
                    height: '40px',
                    width: '40px',
                    top: 0,
                    left: 0
                });

                $div.click(function () {
                    if (_picker.is(":hidden")) {
                        return false;
                    }
                });

                $('#uploadFile').append($div);
            }

            if (enabledHtml5) {
                hUploader = new html5Uploader(defaultOptions);
                hUploader.create($div);
            } else {
                if (Silverlight.isInstalled("5.0.61118.0")) {
                    createSilverlight($div[0]);
                }
                else {
                    setTimeout(showSilverlightNotice, 50);
                }
            }
        }
    };

    function getOffset(e) {
        var t = e.offsetTop;
        var l = e.offsetLeft;
        while (e = e.offsetParent) {
            t += e.offsetTop;
            l += e.offsetLeft;
        }
        var rec = { top: t, left: l };
        return rec;
    };


    function Start() {
        if (enabledHtml5) {
            hUploader.start();
        }
        else {
            slUploader.Start();
        }
    };

    function Stop() {
        if (enabledHtml5) {
            hUploader.stop();
        }
        else {
            slUploader.Stop();
        }
    };

    function Remove(id) {
        id = id || null;
        if (enabledHtml5) {
            hUploader.remove(id);
        }
        else {
            slUploader.Delete(id);
        }
    };

    function GetFiles() {
        if (enabledHtml5) {
            return hUploader.getFiles();
        }
        else {
            return slUploader.GetFiles();
        }
    };

    function Reset() {
        if (enabledHtml5) {
            return hUploader.reset();
        }
        else {
            return slUploader.Reset();
        }
    };

    Create();

    return {
        start: Start,
        stop: Stop,
        remove: Remove,
        getFiles: GetFiles,
        reset: Reset
    };
};
